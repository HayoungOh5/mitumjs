{"code":"import { CurrencyItem } from \"./item\";\nimport { OperationFact } from \"../base\";\nimport { SortFunc } from \"../../utils\";\nimport { HINT, SUFFIX } from \"../../alias\";\nimport { Address, ZeroAddress } from \"../../key\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class TransferItem extends CurrencyItem {\n    constructor(receiver, amounts) {\n        super(HINT.CURRENCY.TRANSFER.ITEM, amounts);\n        if (typeof receiver === \"string\") {\n            if (receiver.endsWith(SUFFIX.ADDRESS.ZERO)) {\n                this.receiver = new ZeroAddress(receiver);\n            }\n            else {\n                this.receiver = new Address(receiver);\n            }\n        }\n        else {\n            this.receiver = receiver;\n        }\n        if (this.receiver.type === \"zero\") {\n            for (const am of amounts) {\n                Assert.check(am.currency.equal(this.receiver.currency), MitumError.detail(ECODE.INVALID_AMOUNT, \"invalid amount currency for given zero address\"));\n            }\n        }\n    }\n    toBuffer() {\n        return Buffer.concat([\n            this.receiver.toBuffer(),\n            Buffer.concat(this.amounts.sort(SortFunc).map(am => am.toBuffer())),\n        ]);\n    }\n    toHintedObject() {\n        return {\n            ...super.toHintedObject(),\n            receiver: this.receiver.toString(),\n        };\n    }\n    toString() {\n        return this.receiver.toString();\n    }\n}\nexport class TransferFact extends OperationFact {\n    constructor(token, sender, items) {\n        super(HINT.CURRENCY.TRANSFER.FACT, token, sender, items);\n        Assert.check(new Set(items.map(it => it.toString())).size === items.length, MitumError.detail(ECODE.INVALID_ITEMS, \"duplicate receiver found in items\"));\n        this.items.forEach(it => Assert.check(this.sender.toString() != it.receiver.toString(), MitumError.detail(ECODE.INVALID_ITEMS, \"sender is same with receiver address\")));\n    }\n    get operationHint() {\n        return HINT.CURRENCY.TRANSFER.OPERATION;\n    }\n}\n//# sourceMappingURL=transfer.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/currency/item.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/utils/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"transfer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/currency/transfer.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/currency/transfer.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { CurrencyItem } from \"./item\";\nimport { OperationFact } from \"../base\";\nimport { Amount } from \"../../common\";\nimport { HintedObject } from \"../../types\";\nimport { Address, ZeroAddress } from \"../../key\";\nexport declare class TransferItem extends CurrencyItem {\n    readonly receiver: Address | ZeroAddress;\n    constructor(receiver: string | Address | ZeroAddress, amounts: Amount[]);\n    toBuffer(): Buffer;\n    toHintedObject(): HintedObject;\n    toString(): string;\n}\nexport declare class TransferFact extends OperationFact<TransferItem> {\n    constructor(token: string, sender: string | Address, items: TransferItem[]);\n    get operationHint(): string;\n}\n"}}
