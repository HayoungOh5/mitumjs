{"code":"import base58 from \"bs58\";\nimport { keccak256 as keccak256js } from \"js-sha3\";\nimport { Address } from \"./address\";\nimport { Hint } from \"../common\";\nimport { Config } from \"../node\";\nimport { HINT, SUFFIX } from \"../alias\";\nimport { keccak256, sha3 } from \"../utils\";\nimport { Assert, ECODE, MitumError, StringAssert } from \"../error\";\nimport { Big } from \"../types\";\nexport class Key {\n    constructor(s) {\n        StringAssert.with(s, MitumError.detail(ECODE.INVALID_KEY, \"invalid key\"))\n            .empty().not()\n            .chainOr(s.endsWith(SUFFIX.KEY.MITUM.PRIVATE) && Config.KEY.MITUM.PRIVATE.satisfy(s.length), s.endsWith(SUFFIX.KEY.ETHER.PRIVATE) && Config.KEY.ETHER.PRIVATE.satisfy(s.length), s.endsWith(SUFFIX.KEY.MITUM.PUBLIC) && Config.KEY.MITUM.PUBLIC.satisfy(s.length), s.endsWith(SUFFIX.KEY.ETHER.PUBLIC) && Config.KEY.ETHER.PUBLIC.satisfy(s.length))\n            .excute();\n        this.key = s.substring(0, s.length - Config.SUFFIX.DEFAULT.value);\n        this.suffix = s.substring(s.length - Config.SUFFIX.DEFAULT.value);\n        this.type = s.endsWith(SUFFIX.KEY.ETHER.PRIVATE) || s.endsWith(SUFFIX.KEY.ETHER.PUBLIC) ? \"ether\" : \"btc\";\n        this.isPriv = s.endsWith(SUFFIX.KEY.MITUM.PRIVATE) || s.endsWith(SUFFIX.KEY.ETHER.PRIVATE);\n    }\n    static from(s) {\n        return s instanceof Key ? s : new Key(s);\n    }\n    get noSuffix() {\n        return this.key;\n    }\n    toBuffer() {\n        return Buffer.from(this.toString());\n    }\n    toString() {\n        return this.key + this.suffix;\n    }\n}\nexport class PubKey extends Key {\n    constructor(key, weight) {\n        super(typeof key === \"string\" ? key : key.toString());\n        this.weight = Big.from(weight);\n        Assert.check(Config.WEIGHT.satisfy(this.weight.v), MitumError.detail(ECODE.INVALID_PUBLIC_KEY, \"weight out of range\"));\n    }\n    toBuffer() {\n        return Buffer.concat([\n            super.toBuffer(),\n            this.weight.toBuffer(\"fill\")\n        ]);\n    }\n    toHintedObject() {\n        return {\n            _hint: PubKey.hint.toString(),\n            weight: this.weight.v,\n            key: this.toString(),\n        };\n    }\n}\nPubKey.hint = new Hint(HINT.CURRENCY.KEY);\nexport class Keys {\n    constructor(keys, threshold) {\n        Assert.check(Config.KEYS_IN_ACCOUNT.satisfy(keys.length), MitumError.detail(ECODE.INVALID_KEYS, \"keys length out of range\"));\n        this._keys = keys.map(k => {\n            if (k instanceof PubKey) {\n                return k;\n            }\n            const [key, weight] = k;\n            return new PubKey(key instanceof Key ? key.toString() : key, weight);\n        });\n        this.threshold = threshold instanceof Big ? threshold : new Big(threshold);\n        Assert.check(Config.THRESHOLD.satisfy(this.threshold.v), MitumError.detail(ECODE.INVALID_KEYS, \"threshold out of range\"));\n        Assert.check(new Set(this._keys.map(k => k.toString())).size === this._keys.length, MitumError.detail(ECODE.INVALID_KEYS, \"duplicate keys found in keys\"));\n    }\n    get keys() {\n        return this._keys;\n    }\n    get address() {\n        return new Address(base58.encode(sha3(this.toBuffer())) + SUFFIX.ADDRESS.MITUM);\n    }\n    toBuffer() {\n        return Buffer.concat([\n            Buffer.concat(this._keys.sort((a, b) => Buffer.compare(Buffer.from(a.toString()), Buffer.from(b.toBuffer()))).map(k => k.toBuffer())),\n            this.threshold.toBuffer(\"fill\")\n        ]);\n    }\n    toHintedObject() {\n        return {\n            _hint: Keys.hint.toString(),\n            hash: base58.encode(sha3(this.toBuffer())),\n            keys: this._keys.sort((a, b) => Buffer.compare(Buffer.from(a.toString()), Buffer.from(b.toBuffer()))).map(k => k.toHintedObject()),\n            threshold: this.threshold.v,\n        };\n    }\n}\nKeys.hint = new Hint(HINT.CURRENCY.KEYS);\nexport class EtherKeys {\n    constructor(keys, threshold) {\n        Assert.check(Config.KEYS_IN_ACCOUNT.satisfy(keys.length), MitumError.detail(ECODE.INVALID_KEYS, \"keys length out of range\"));\n        this._keys = keys.map(k => {\n            if (k instanceof PubKey) {\n                return k;\n            }\n            const [key, weight] = k;\n            return new PubKey(key instanceof Key ? key.toString() : key, weight);\n        });\n        this.threshold = threshold instanceof Big ? threshold : new Big(threshold);\n        Assert.check(Config.THRESHOLD.satisfy(this.threshold.v), MitumError.detail(ECODE.INVALID_KEYS, \"threshold out of range\"));\n        Assert.check(new Set(this._keys.map(k => k.toString())).size === this._keys.length, MitumError.detail(ECODE.INVALID_KEYS, \"duplicate keys found in keys\"));\n    }\n    get keys() {\n        return this._keys;\n    }\n    get etherAddress() {\n        return new Address(keccak256(this.toBuffer()).subarray(12).toString('hex') + SUFFIX.ADDRESS.ETHER);\n    }\n    toBuffer() {\n        return Buffer.concat([\n            Buffer.concat(this._keys.sort((a, b) => Buffer.compare(Buffer.from(a.toString()), Buffer.from(b.toBuffer()))).map(k => k.toBuffer())),\n            this.threshold.toBuffer(\"fill\")\n        ]);\n    }\n    toHintedObject() {\n        const eHash = keccak256js(this.toBuffer());\n        return {\n            _hint: EtherKeys.hint.toString(),\n            hash: eHash.slice(24),\n            keys: this._keys\n                .sort((a, b) => Buffer.compare(Buffer.from(a.toString()), Buffer.from(b.toBuffer())))\n                .map((k) => k.toHintedObject()),\n            threshold: this.threshold.v,\n        };\n    }\n}\nEtherKeys.hint = new Hint(HINT.CURRENCY.ETH_KEYS);\n//# sourceMappingURL=pub.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/node_modules/bs58/index.d.ts","/Users/ohayoung/Projects/npm/mitumjs/node_modules/js-sha3/index.d.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/address.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/types.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/node/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/utils/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts"],"map":"{\"version\":3,\"file\":\"pub.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/key/pub.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/key/pub.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { Address } from \"./address\";\nimport { KeyPairType } from \"./types\";\nimport { Big, HintedObject, IBuffer, IHintedObject, IString } from \"../types\";\ntype BigArg = string | number | Big;\ntype Pub = [string | Key, BigArg] | PubKey;\nexport declare class Key implements IBuffer, IString {\n    private readonly key;\n    private readonly suffix;\n    readonly type: KeyPairType;\n    readonly isPriv: boolean;\n    constructor(s: string);\n    static from(s: string | Key): Key;\n    get noSuffix(): string;\n    toBuffer(): Buffer;\n    toString(): string;\n}\nexport declare class PubKey extends Key implements IHintedObject {\n    private static hint;\n    readonly weight: Big;\n    constructor(key: string | Key, weight: number | string | Big);\n    toBuffer(): Buffer;\n    toHintedObject(): HintedObject;\n}\nexport declare class Keys implements IBuffer, IHintedObject {\n    private static hint;\n    private readonly _keys;\n    readonly threshold: Big;\n    constructor(keys: Pub[], threshold: BigArg);\n    get keys(): PubKey[];\n    get address(): Address;\n    toBuffer(): Buffer;\n    toHintedObject(): HintedObject;\n}\nexport declare class EtherKeys implements IBuffer, IHintedObject {\n    private static hint;\n    private readonly _keys;\n    readonly threshold: Big;\n    constructor(keys: Pub[], threshold: BigArg);\n    get keys(): PubKey[];\n    get etherAddress(): Address;\n    toBuffer(): Buffer;\n    toHintedObject(): HintedObject;\n}\nexport {};\n"}}
