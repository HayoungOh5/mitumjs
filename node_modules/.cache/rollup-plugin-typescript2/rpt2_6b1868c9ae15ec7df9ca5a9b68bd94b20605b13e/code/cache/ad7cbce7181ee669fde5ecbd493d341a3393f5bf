{"code":"import { TokenFact } from \"./fact\";\nimport { Big } from \"../../types\";\nimport { HINT } from \"../../alias\";\nimport { Address } from \"../../key\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class ApproveFact extends TokenFact {\n    constructor(token, sender, contract, currency, approved, amount) {\n        super(HINT.TOKEN.APPROVE.FACT, token, sender, contract, currency);\n        this.approved = Address.from(approved);\n        this.amount = Big.from(amount);\n        Assert.check(this.contract.toString() !== this.approved.toString(), MitumError.detail(ECODE.INVALID_FACT, \"contract is same with approved address\"));\n        Assert.check(this.amount.compare(0) >= 0, MitumError.detail(ECODE.INVALID_FACT, \"under zero amount\"));\n        this._hash = this.hashing();\n    }\n    toBuffer() {\n        return Buffer.concat([\n            super.toBuffer(),\n            this.approved.toBuffer(),\n            this.amount.toBuffer(),\n        ]);\n    }\n    toHintedObject() {\n        return Object.assign(Object.assign({}, super.toHintedObject()), { approved: this.approved.toString(), amount: this.amount.toString() });\n    }\n    get operationHint() {\n        return HINT.TOKEN.APPROVE.OPERATION;\n    }\n}\n//# sourceMappingURL=approve.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/token/fact.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts"],"map":"{\"version\":3,\"file\":\"approve.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/token/approve.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,QAAQ,CAAA;AAElC,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AACjC,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAA;AAClC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AAEnC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAGvD,MAAM,OAAO,WAAY,SAAQ,SAAS;IAItC,YACI,KAAa,EACb,MAAwB,EACxB,QAA0B,EAC1B,QAA6B,EAC7B,QAA0B,EAC1B,MAA6B;QAE7B,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;QAEjE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACtC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAE9B,MAAM,CAAC,KAAK,CACR,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EACrD,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,wCAAwC,CAAC,CAClF,CAAA;QAED,MAAM,CAAC,KAAK,CACR,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAC3B,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAC7D,CAAA;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;IAC/B,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,MAAM,CAAC;YACjB,KAAK,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;SACzB,CAAC,CAAA;IACN,CAAC;IAED,cAAc;QACV,uCACO,KAAK,CAAC,cAAc,EAAE,KACzB,QAAQ,EAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EACnC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IACjC;IACL,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAA;IACvC,CAAC;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/token/approve.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { TokenFact } from \"./fact\";\nimport { Big } from \"../../types\";\nimport { Address } from \"../../key\";\nimport { CurrencyID } from \"../../common\";\nimport { FactJson } from \"../base\";\nexport declare class ApproveFact extends TokenFact {\n    readonly approved: Address;\n    readonly amount: Big;\n    constructor(token: string, sender: string | Address, contract: string | Address, currency: string | CurrencyID, approved: string | Address, amount: string | number | Big);\n    toBuffer(): Buffer;\n    toHintedObject(): FactJson;\n    get operationHint(): string;\n}\n"}}
