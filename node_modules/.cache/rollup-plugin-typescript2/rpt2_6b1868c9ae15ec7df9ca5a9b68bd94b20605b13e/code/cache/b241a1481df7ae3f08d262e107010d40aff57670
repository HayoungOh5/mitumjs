{"code":"import { SUFFIX } from \"../alias\";\nimport { Config } from \"../node\";\nimport { CurrencyID } from \"../common\";\nimport { ECODE, MitumError, StringAssert } from \"../error\";\nclass BaseAddress {\n    constructor(s, type) {\n        this.s = s;\n        if (type) {\n            this.type = type;\n        }\n        else if (this.s.endsWith(SUFFIX.ADDRESS.MITUM)) {\n            this.type = \"mitum\";\n        }\n        else if (this.s.endsWith(SUFFIX.ADDRESS.ETHER)) {\n            this.type = \"ether\";\n        }\n        else if (this.s.endsWith(SUFFIX.ADDRESS.NODE)) {\n            this.type = \"node\";\n        }\n        else if (this.s.endsWith(SUFFIX.ADDRESS.ZERO)) {\n            this.type = \"zero\";\n        }\n        else {\n            throw MitumError.detail(ECODE.INVALID_ADDRESS, \"address type not detected\");\n        }\n    }\n    toBuffer() {\n        return Buffer.from(this.s);\n    }\n    toString() {\n        return this.s;\n    }\n}\nexport class Address extends BaseAddress {\n    constructor(s) {\n        super(s);\n        StringAssert.with(s, MitumError.detail(ECODE.INVALID_ADDRESS, \"invalid address\"))\n            .empty().not()\n            .endsWith(SUFFIX.ADDRESS.MITUM, SUFFIX.ADDRESS.ETHER)\n            .satisfyConfig(Config.ADDRESS.DEFAULT)\n            .excute();\n    }\n    static from(s) {\n        return s instanceof Address ? s : new Address(s);\n    }\n}\nexport class NodeAddress extends BaseAddress {\n    constructor(s) {\n        super(s, \"node\");\n        StringAssert.with(s, MitumError.detail(ECODE.INVALID_ADDRESS, \"invalid node address\"))\n            .empty().not()\n            .endsWith(SUFFIX.ADDRESS.NODE)\n            .satisfyConfig(Config.ADDRESS.NODE)\n            .excute();\n    }\n    static from(s) {\n        return s instanceof NodeAddress ? s : new NodeAddress(s);\n    }\n}\nexport class ZeroAddress extends BaseAddress {\n    constructor(s) {\n        super(s, \"zero\");\n        StringAssert.with(s, MitumError.detail(ECODE.INVALID_ADDRESS, \"invalid zero address\"))\n            .empty().not()\n            .endsWith(SUFFIX.ADDRESS.ZERO)\n            .satisfyConfig(Config.ADDRESS.ZERO)\n            .excute();\n        this.currency = new CurrencyID(s.substring(0, s.length - Config.SUFFIX.ZERO_ADDRESS.value));\n    }\n    static from(s) {\n        return s instanceof ZeroAddress ? s : new ZeroAddress(s);\n    }\n}\n//# sourceMappingURL=address.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/key/types.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/node/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"address.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/key/address.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/key/address.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { AddressType } from \"./types\";\nimport { CurrencyID } from \"../common\";\nimport { IBuffer, IString } from \"../types\";\ndeclare abstract class BaseAddress implements IBuffer, IString {\n    private s;\n    readonly type: AddressType;\n    constructor(s: string, type?: AddressType);\n    toBuffer(): Buffer;\n    toString(): string;\n}\nexport declare class Address extends BaseAddress {\n    constructor(s: string);\n    static from(s: string | Address): Address;\n}\nexport declare class NodeAddress extends BaseAddress {\n    constructor(s: string);\n    static from(s: string | NodeAddress): NodeAddress;\n}\nexport declare class ZeroAddress extends BaseAddress {\n    readonly currency: CurrencyID;\n    constructor(s: string);\n    static from(s: string | ZeroAddress): ZeroAddress;\n}\nexport {};\n"}}
