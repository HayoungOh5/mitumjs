{"code":"import { CurrencyItem } from \"./item\";\nimport { OperationFact } from \"../base\";\nimport { HINT } from \"../../alias\";\nimport { Address } from \"../../key\";\nimport { SortFunc } from \"../../utils\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class WithdrawItem extends CurrencyItem {\n    constructor(target, amounts) {\n        super(HINT.CURRENCY.WITHDRAW.ITEM, amounts);\n        this.target = typeof target === \"string\" ? new Address(target) : target;\n    }\n    toBuffer() {\n        return Buffer.concat([\n            this.target.toBuffer(),\n            Buffer.concat(this.amounts.sort(SortFunc).map(am => am.toBuffer())),\n        ]);\n    }\n    toHintedObject() {\n        return {\n            ...super.toHintedObject(),\n            target: this.target.toString(),\n        };\n    }\n    toString() {\n        return this.target.toString();\n    }\n}\nexport class WithdrawFact extends OperationFact {\n    constructor(token, sender, items) {\n        super(HINT.CURRENCY.WITHDRAW.FACT, token, sender, items);\n        Assert.check(new Set(items.map(it => it.toString())).size === items.length, MitumError.detail(ECODE.INVALID_ITEMS, \"duplicate target found in items\"));\n        this.items.forEach(it => Assert.check(this.sender.toString() != it.target.toString(), MitumError.detail(ECODE.INVALID_ITEMS, \"sender is same with target address\")));\n    }\n    get operationHint() {\n        return HINT.CURRENCY.WITHDRAW.OPERATION;\n    }\n}\n//# sourceMappingURL=withdraw.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/currency/item.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/utils/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"withdraw.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/currency/withdraw.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAA;AACrC,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAA;AAEvC,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAA;AAClC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AAEnC,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AAEtC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAEvD,MAAM,OAAO,YAAa,SAAQ,YAAY;IAG1C,YAAY,MAAwB,EAAE,OAAiB;QACnD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;QAC3C,IAAI,CAAC,MAAM,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;IAC3E,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,MAAM,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACtB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;SACtE,CAAC,CAAA;IACN,CAAC;IAED,cAAc;QACV,OAAO;YACH,GAAG,KAAK,CAAC,cAAc,EAAE;YACzB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;SACjC,CAAA;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAA;IACjC,CAAC;CACJ;AAED,MAAM,OAAO,YAAa,SAAQ,aAA2B;IACzD,YAAY,KAAa,EAAE,MAAwB,EAAE,KAAqB;QACtE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;QAExD,MAAM,CAAC,KAAK,CACR,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,MAAM,EAC7D,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,iCAAiC,CAAC,CAC5E,CAAA;QAED,IAAI,CAAC,KAAK,CAAC,OAAO,CACd,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CACd,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,EAC9C,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,oCAAoC,CAAC,CAC/E,CACJ,CAAA;IACL,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAA;IAC3C,CAAC;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/currency/withdraw.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { CurrencyItem } from \"./item\";\nimport { OperationFact } from \"../base\";\nimport { Address } from \"../../key\";\nimport { Amount } from \"../../common\";\nimport { HintedObject } from \"../../types\";\nexport declare class WithdrawItem extends CurrencyItem {\n    readonly target: Address;\n    constructor(target: string | Address, amounts: Amount[]);\n    toBuffer(): Buffer;\n    toHintedObject(): HintedObject;\n    toString(): string;\n}\nexport declare class WithdrawFact extends OperationFact<WithdrawItem> {\n    constructor(token: string, sender: string | Address, items: WithdrawItem[]);\n    get operationHint(): string;\n}\n"}}
