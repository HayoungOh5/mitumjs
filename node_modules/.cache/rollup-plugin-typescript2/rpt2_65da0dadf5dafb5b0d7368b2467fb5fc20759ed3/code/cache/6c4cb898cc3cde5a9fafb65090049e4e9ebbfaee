{"code":"import { STOItem } from \"./item\";\nimport { Partition } from \"./partition\";\nimport { OperationFact } from \"../base\";\nimport { HINT } from \"../../alias\";\nimport { Big } from \"../../types\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class CreateSecurityTokenItem extends STOItem {\n    constructor(contract, granularity, defaultPartition, currency) {\n        super(HINT.STO.CREATE_SECURITY_TOKEN.ITEM, contract, currency);\n        this.granularity = Big.from(granularity);\n        this.defaultPartition = Partition.from(defaultPartition);\n        Assert.check(!this.granularity.isZero(), MitumError.detail(ECODE.INVALID_ITEM, \"zero granularity\"));\n    }\n    toBuffer() {\n        return Buffer.concat([\n            this.contract.toBuffer(),\n            this.granularity.toBuffer(\"fill\"),\n            this.defaultPartition.toBuffer(),\n            this.currency.toBuffer(),\n        ]);\n    }\n    toHintedObject() {\n        return {\n            ...super.toHintedObject(),\n            granularity: this.granularity.v,\n            default_partition: this.defaultPartition.toString(),\n        };\n    }\n}\nexport class CreateSecurityTokenFact extends OperationFact {\n    constructor(token, sender, items) {\n        super(HINT.STO.CREATE_SECURITY_TOKEN.FACT, token, sender, items);\n        Assert.check(new Set(items.map(it => it.toString())).size === items.length, MitumError.detail(ECODE.INVALID_ITEMS, \"duplicate contract found in items\"));\n    }\n    get operationHint() {\n        return HINT.STO.CREATE_SECURITY_TOKEN.OPERATION;\n    }\n}\n//# sourceMappingURL=create-security-token.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/sto/item.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/sto/partition.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"create-security-token.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/sto/create-security-token.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAA;AAChC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAA;AAEvC,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAA;AAGlC,OAAO,EAAE,GAAG,EAAgB,MAAM,aAAa,CAAA;AAC/C,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAEvD,MAAM,OAAO,uBAAwB,SAAQ,OAAO;IAIhD,YACI,QAA0B,EAC1B,WAAkC,EAClC,gBAAoC,EACpC,QAA6B;QAE7B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;QAE9D,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;QACxC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;QAExD,MAAM,CAAC,KAAK,CACR,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAC1B,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAC5D,CAAA;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,MAAM,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YAChC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;SAC3B,CAAC,CAAA;IACN,CAAC;IAED,cAAc;QACV,OAAO;YACH,GAAG,KAAK,CAAC,cAAc,EAAE;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAC/B,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;SACtD,CAAA;IACL,CAAC;CACJ;AAED,MAAM,OAAO,uBAAwB,SAAQ,aAAsC;IAC/E,YAAY,KAAa,EAAE,MAAwB,EAAE,KAAgC;QACjF,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;QAEhE,MAAM,CAAC,KAAK,CACR,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,MAAM,EAC7D,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,mCAAmC,CAAC,CAC9E,CAAA;IACL,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,SAAS,CAAA;IACnD,CAAC;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/sto/create-security-token.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { STOItem } from \"./item\";\nimport { Partition } from \"./partition\";\nimport { OperationFact } from \"../base\";\nimport { Address } from \"../../key\";\nimport { CurrencyID } from \"../../common\";\nimport { Big, HintedObject } from \"../../types\";\nexport declare class CreateSecurityTokenItem extends STOItem {\n    readonly granularity: Big;\n    readonly defaultPartition: Partition;\n    constructor(contract: string | Address, granularity: string | number | Big, defaultPartition: string | Partition, currency: string | CurrencyID);\n    toBuffer(): Buffer;\n    toHintedObject(): HintedObject;\n}\nexport declare class CreateSecurityTokenFact extends OperationFact<CreateSecurityTokenItem> {\n    constructor(token: string, sender: string | Address, items: CreateSecurityTokenItem[]);\n    get operationHint(): string;\n}\n"}}
