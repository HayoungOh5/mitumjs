{"code":"import base58 from \"bs58\";\nimport { FullTimeStamp } from \"../../types\";\nimport { Key, NodeAddress } from \"../../key\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class FactSign {\n    constructor(signer, signature, signedAt) {\n        this.signature = signature;\n        this.signedAt = new FullTimeStamp(signedAt);\n        this.signer = Key.from(signer);\n        Assert.get(this.signer.isPriv, MitumError.detail(ECODE.INVALID_PUBLIC_KEY, \"not public key\")).not().excute();\n    }\n    toBuffer() {\n        return Buffer.concat([\n            this.signer.toBuffer(),\n            this.signature,\n            this.signedAt.toBuffer(\"super\")\n        ]);\n    }\n    toHintedObject() {\n        return {\n            signer: this.signer.toString(),\n            signature: base58.encode(this.signature),\n            signed_at: this.signedAt.ISO(),\n        };\n    }\n}\nexport class GeneralFactSign extends FactSign {\n    constructor(signer, signature, signedAt) {\n        super(signer, signature, signedAt);\n    }\n    toHintedObject() {\n        return super.toHintedObject();\n    }\n}\nexport class NodeFactSign extends FactSign {\n    constructor(node, signer, signature, signedAt) {\n        super(signer, signature, signedAt);\n        this.node = NodeAddress.from(node);\n    }\n    toBuffer() {\n        return Buffer.concat([\n            this.node.toBuffer(),\n            super.toBuffer(),\n        ]);\n    }\n    toHintedObject() {\n        return {\n            ...super.toHintedObject(),\n            node: this.node.toString(),\n        };\n    }\n}\n//# sourceMappingURL=factsign.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/node_modules/bs58/index.d.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/types.d.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"factsign.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/base/factsign.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,MAAM,MAAM,MAAM,CAAA;AAIzB,OAAO,EAAW,aAAa,EAAG,MAAM,aAAa,CAAA;AACrD,OAAO,EAAE,GAAG,EAAW,WAAW,EAAE,MAAM,WAAW,CAAA;AACrD,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAEvD,MAAM,OAAgB,QAAQ;IAK1B,YAAsB,MAAoB,EAAE,SAAiB,EAAE,QAAgB;QAC3E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,QAAQ,CAAC,CAAA;QAE3C,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC9B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAA;IAChH,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,MAAM,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACtB,IAAI,CAAC,SAAS;YACd,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;SAClC,CAAC,CAAA;IACN,CAAC;IAED,cAAc;QACV,OAAO;YACH,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC9B,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;YACxC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;SACjC,CAAA;IACL,CAAC;CACJ;AAED,MAAM,OAAO,eAAgB,SAAQ,QAAQ;IACzC,YAAY,MAAoB,EAAE,SAAiB,EAAE,QAAgB;QACjE,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAA;IACtC,CAAC;IAED,cAAc;QACV,OAAO,KAAK,CAAC,cAAc,EAAE,CAAA;IACjC,CAAC;CACJ;AAED,MAAM,OAAO,YAAa,SAAQ,QAAQ;IAGtC,YAAY,IAA0B,EAAE,MAAoB,EAAE,SAAiB,EAAE,QAAgB;QAC7F,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAA;QAClC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACtC,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,MAAM,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACpB,KAAK,CAAC,QAAQ,EAAE;SACnB,CAAC,CAAA;IACN,CAAC;IAED,cAAc;QACV,OAAO;YACH,GAAG,KAAK,CAAC,cAAc,EAAE;YACzB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;SAC7B,CAAA;IACL,CAAC;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/base/factsign.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { FS, GeneralFS, NodeFS } from \"./types\";\nimport { IBuffer, FullTimeStamp } from \"../../types\";\nimport { Key, Address, NodeAddress } from \"../../key\";\nexport declare abstract class FactSign implements IBuffer {\n    readonly signer: Key;\n    readonly signature: Buffer;\n    readonly signedAt: FullTimeStamp;\n    protected constructor(signer: string | Key, signature: Buffer, signedAt: string);\n    toBuffer(): Buffer;\n    toHintedObject(): FS;\n}\nexport declare class GeneralFactSign extends FactSign {\n    constructor(signer: string | Key, signature: Buffer, signedAt: string);\n    toHintedObject(): GeneralFS;\n}\nexport declare class NodeFactSign extends FactSign {\n    readonly node: Address;\n    constructor(node: string | NodeAddress, signer: string | Key, signature: Buffer, signedAt: string);\n    toBuffer(): Buffer;\n    toHintedObject(): NodeFS;\n}\n"}}
