{"code":"import base58 from \"bs58\";\nimport { GeneralFactSign, NodeFactSign } from \"./base\";\nimport { sha3 } from \"../utils\";\nimport { KeyPair, NodeAddress } from \"../key\";\nimport { Generator, FullTimeStamp, TimeStamp } from \"../types\";\nimport { Assert, ECODE, MitumError } from \"../error\";\nexport class Signer extends Generator {\n    constructor(networkID, api) {\n        super(networkID, api);\n    }\n    sign(privatekey, json, option) {\n        const keypair = KeyPair.fromPrivateKey(privatekey);\n        return option ? this.nodeSign(keypair, json, option.node ?? \"\") : this.accSign(keypair, json);\n    }\n    accSign(keypair, json) {\n        const now = TimeStamp.new();\n        const fs = new GeneralFactSign(keypair.publicKey.toString(), keypair.sign(Buffer.concat([\n            Buffer.from(this.networkID),\n            base58.decode(json.fact.hash),\n            now.toBuffer(),\n        ])), now.toString()).toHintedObject();\n        if (json.signs !== undefined) {\n            json.signs = [...json.signs, fs];\n        }\n        else {\n            json.signs = [fs];\n        }\n        Assert.check(new Set(json.signs.map(fs => fs.signer.toString())).size === json.signs.length, MitumError.detail(ECODE.INVALID_FACTSIGNS, \"duplicate signers found in factsigns\"));\n        const factSigns = json.signs\n            .map((s) => Buffer.concat([\n            Buffer.from(s.signer),\n            base58.decode(s.signature),\n            new FullTimeStamp(s.signed_at).toBuffer(\"super\"),\n        ]));\n        //.sort((a, b) => Buffer.compare(a, b))\n        const msg = Buffer.concat([\n            base58.decode(json.fact.hash),\n            Buffer.concat(factSigns),\n        ]);\n        json.hash = base58.encode(sha3(msg));\n        return json;\n    }\n    nodeSign(keypair, json, node) {\n        const nd = new NodeAddress(node);\n        const now = TimeStamp.new();\n        const fs = new NodeFactSign(node, keypair.publicKey.toString(), keypair.sign(Buffer.concat([\n            Buffer.from(this.networkID),\n            nd.toBuffer(),\n            base58.decode(json.fact.hash),\n            now.toBuffer(),\n        ])), now.toString()).toHintedObject();\n        if (json.signs) {\n            json.signs = [...json.signs, fs];\n        }\n        else {\n            json.signs = [fs];\n        }\n        const factSigns = json.signs\n            .map((s) => Buffer.concat([\n            Buffer.from(s.signer),\n            base58.decode(s.signature),\n            new FullTimeStamp(s.signed_at).toBuffer(\"super\"),\n        ]))\n            .sort((a, b) => Buffer.compare(a, b));\n        const msg = Buffer.concat([\n            base58.decode(json.fact.hash),\n            Buffer.concat(factSigns),\n        ]);\n        json.hash = base58.encode(sha3(msg));\n        return json;\n    }\n}\n//# sourceMappingURL=signer.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/node_modules/bs58/index.d.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/utils/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/types.d.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"signer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/operation/signer.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/signer.d.ts","writeByteOrderMark":false,"text":"import { OperationJson } from \"./base\";\nimport { Key } from \"../key\";\nimport { Generator, HintedObject, IP } from \"../types\";\nimport { SignOption } from \"./base/types\";\nexport declare class Signer extends Generator {\n    constructor(networkID: string, api?: string | IP);\n    sign(privatekey: string | Key, json: HintedObject, option?: SignOption): OperationJson;\n    private accSign;\n    private nodeSign;\n}\n"}}
