{"code":"import { CreateServiceFact } from \"./create-service\";\nimport { AppendFact } from \"./append\";\nimport { ContractGenerator, Operation } from \"../base\";\nimport { contract, getAPIData } from \"../../api\";\nimport { TimeStamp as TS, URIString } from \"../../types\";\nexport class TimeStamp extends ContractGenerator {\n    constructor(networkID, api, delegateIP) {\n        super(networkID, api, delegateIP);\n    }\n    createService(contractAddr, sender, currency) {\n        return new Operation(this.networkID, new CreateServiceFact(TS.new().UTC(), sender, contractAddr, currency));\n    }\n    append(contractAddr, sender, projectID, requestTimeStamp, data, currency) {\n        new URIString(projectID, 'projectID');\n        const fact = new AppendFact(TS.new().UTC(), sender, contractAddr, projectID, requestTimeStamp, data, currency);\n        return new Operation(this.networkID, fact);\n    }\n    async getServiceInfo(contractAddr) {\n        return await getAPIData(() => contract.timestamp.getService(this.api, contractAddr, this.delegateIP));\n    }\n    async getTimestampInfo(contractAddr, projectID, tid) {\n        return await getAPIData(() => contract.timestamp.getTimeStamp(this.api, contractAddr, projectID, tid, this.delegateIP));\n    }\n}\n//# sourceMappingURL=index.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/timestamp/create-service.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/timestamp/append.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/api/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/timestamp/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAA;AACpD,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAA;AAErC,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,MAAM,SAAS,CAAA;AAItD,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,WAAW,CAAA;AAChD,OAAO,EAAW,SAAS,IAAI,EAAE,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AAEjE,MAAM,OAAO,SAAU,SAAQ,iBAAiB;IAC5C,YACI,SAAiB,EACjB,GAAiB,EACjB,UAAwB;QAExB,KAAK,CAAC,SAAS,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;IACrC,CAAC;IAED,aAAa,CACT,YAA8B,EAC9B,MAAwB,EACxB,QAA6B;QAE7B,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,SAAS,EACd,IAAI,iBAAiB,CACjB,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EACd,MAAM,EACN,YAAY,EACZ,QAAQ,CACX,CACJ,CAAA;IACL,CAAC;IAED,MAAM,CACF,YAA8B,EAC9B,MAAwB,EACxB,SAAiB,EACjB,gBAAuC,EACvC,IAAY,EACZ,QAA6B;QAE7B,IAAI,SAAS,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;QACtC,MAAM,IAAI,GAAG,IAAI,UAAU,CACvB,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EACd,MAAM,EACN,YAAY,EACZ,SAAS,EACT,gBAAgB,EAChB,IAAI,EACJ,QAAQ,CACX,CAAA;QAED,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;IAC9C,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,YAA8B;QAC/C,OAAO,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;IACzG,CAAC;IAED,KAAK,CAAC,gBAAgB,CAClB,YAA8B,EAC9B,SAAiB,EACjB,GAA0B;QAE1B,OAAO,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;IAC3H,CAAC;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/timestamp/index.d.ts","writeByteOrderMark":false,"text":"import { CreateServiceFact } from \"./create-service\";\nimport { AppendFact } from \"./append\";\nimport { ContractGenerator, Operation } from \"../base\";\nimport { Address } from \"../../key\";\nimport { CurrencyID } from \"../../common\";\nimport { Big, IP } from \"../../types\";\nexport declare class TimeStamp extends ContractGenerator {\n    constructor(networkID: string, api?: string | IP, delegateIP?: string | IP);\n    createService(contractAddr: string | Address, sender: string | Address, currency: string | CurrencyID): Operation<CreateServiceFact>;\n    append(contractAddr: string | Address, sender: string | Address, projectID: string, requestTimeStamp: string | number | Big, data: string, currency: string | CurrencyID): Operation<AppendFact>;\n    getServiceInfo(contractAddr: string | Address): Promise<any>;\n    getTimestampInfo(contractAddr: string | Address, projectID: string, tid: string | number | Big): Promise<any>;\n}\n"}}
