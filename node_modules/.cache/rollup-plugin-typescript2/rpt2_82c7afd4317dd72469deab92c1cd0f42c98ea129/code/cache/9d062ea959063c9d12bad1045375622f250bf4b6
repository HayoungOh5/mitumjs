{"code":"import { Item } from \"../base\";\nimport { Config } from \"../../node\";\nimport { Address } from \"../../key\";\nimport { CurrencyID } from \"../../common\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class CredentialItem extends Item {\n    constructor(hint, contract, holder, templateID, id, currency) {\n        super(hint);\n        this.contract = Address.from(contract);\n        this.holder = Address.from(holder);\n        this.templateID = templateID;\n        this.id = id;\n        this.currency = CurrencyID.from(currency);\n        Assert.check(Config.CREDENTIAL.TEMPLATE_ID.satisfy(templateID.length), MitumError.detail(ECODE.INVALID_ITEM, \"template id length out of range\"));\n        Assert.check(Config.CREDENTIAL.ID.satisfy(id.length), MitumError.detail(ECODE.INVALID_ITEM, \"credential id length out of range\"));\n        Assert.check(this.contract.toString() !== this.holder.toString(), MitumError.detail(ECODE.INVALID_ITEM, \"contract is same with holder address\"));\n    }\n    toBuffer() {\n        return Buffer.concat([\n            this.contract.toBuffer(),\n            this.holder.toBuffer(),\n            Buffer.from(this.templateID),\n            Buffer.from(this.id),\n        ]);\n    }\n    toHintedObject() {\n        return {\n            ...super.toHintedObject(),\n            contract: this.contract.toString(),\n            holder: this.holder.toString(),\n            template_id: this.templateID,\n            id: this.id,\n            currency: this.currency.toString(),\n        };\n    }\n    toString() {\n        return this.contract.toString();\n    }\n}\n//# sourceMappingURL=item.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/node/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"item.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/credential/item.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAA;AAE9B,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AACnC,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AAEzC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAEvD,MAAM,OAAgB,cAAe,SAAQ,IAAI;IAO7C,YACI,IAAY,EACZ,QAA0B,EAC1B,MAAwB,EACxB,UAAkB,EAClB,EAAU,EACV,QAA6B;QAE7B,KAAK,CAAC,IAAI,CAAC,CAAA;QAEX,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QACtC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAClC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAC5B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAA;QACZ,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAEzC,MAAM,CAAC,KAAK,CACR,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,EACxD,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,iCAAiC,CAAC,CAC3E,CAAA;QAED,MAAM,CAAC,KAAK,CACR,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,EACvC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,mCAAmC,CAAC,CAC7E,CAAA;QAED,MAAM,CAAC,KAAK,CACR,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EACnD,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,sCAAsC,CAAC,CAChF,CAAA;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,MAAM,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;SACvB,CAAC,CAAA;IACN,CAAC;IAED,cAAc;QACV,OAAO;YACH,GAAG,KAAK,CAAC,cAAc,EAAE;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YAClC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC9B,WAAW,EAAE,IAAI,CAAC,UAAU;YAC5B,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;SACrC,CAAA;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAA;IACnC,CAAC;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/credential/item.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { Item } from \"../base\";\nimport { Address } from \"../../key\";\nimport { CurrencyID } from \"../../common\";\nimport { HintedObject } from \"../../types\";\nexport declare abstract class CredentialItem extends Item {\n    readonly contract: Address;\n    readonly holder: Address;\n    readonly templateID: string;\n    readonly id: string;\n    readonly currency: CurrencyID;\n    protected constructor(hint: string, contract: string | Address, holder: string | Address, templateID: string, id: string, currency: string | CurrencyID);\n    toBuffer(): Buffer;\n    toHintedObject(): HintedObject;\n    toString(): string;\n}\n"}}
