{"code":"import { ContractFact } from \"../base\";\nimport { HINT } from \"../../alias\";\nimport { Config } from \"../../node\";\nimport { Address } from \"../../key\";\nimport { Big, LongString } from \"../../types\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nimport { SortFunc, hasOverlappingAddress } from \"../../utils\";\nexport class CreateCollectionFact extends ContractFact {\n    constructor(token, sender, contract, name, royalty, uri, whitelist, currency) {\n        super(HINT.NFT.CREATE_COLLECTION.FACT, token, sender, contract, currency);\n        this.name = LongString.from(name);\n        this.royalty = Big.from(royalty);\n        this.uri = LongString.from(uri);\n        this.whitelist = whitelist ? whitelist.map(w => Address.from(w)) : [];\n        Assert.check(Config.NFT.ROYALTY.satisfy(this.royalty.v), MitumError.detail(ECODE.INVALID_FACT, \"royalty out of range\"));\n        Assert.check(Config.NFT.ADDRESS_IN_WHITELIST.satisfy(this.whitelist.length), MitumError.detail(ECODE.INVALID_FACT, \"whitelist length out of range\"));\n        Assert.check(hasOverlappingAddress(this.whitelist), MitumError.detail(ECODE.INVALID_FACT, \"duplicate address found in whitelist\"));\n        this.whitelist.forEach(a => Assert.check(this.contract.toString() !== a.toString(), MitumError.detail(ECODE.INVALID_FACT, \"contract is same with whitelist address\")));\n        this._hash = this.hashing();\n    }\n    toBuffer() {\n        return Buffer.concat([\n            super.toBuffer(),\n            this.name.toBuffer(),\n            this.royalty.toBuffer(\"fill\"),\n            this.uri.toBuffer(),\n            this.currency.toBuffer(),\n            Buffer.concat(this.whitelist.sort(SortFunc).map(w => w.toBuffer())),\n        ]);\n    }\n    toHintedObject() {\n        return Object.assign(Object.assign({}, super.toHintedObject()), { name: this.name.toString(), royalty: this.royalty.v, uri: this.uri.toString(), whitelist: this.whitelist.sort(SortFunc).map(w => w.toString()) });\n    }\n    get operationHint() {\n        return HINT.NFT.CREATE_COLLECTION.OPERATION;\n    }\n}\n//# sourceMappingURL=create-collection.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/node/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"create-collection.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/nft/create-collection.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/nft/create-collection.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { ContractFact, FactJson } from \"../base\";\nimport { Address } from \"../../key\";\nimport { CurrencyID } from \"../../common\";\nimport { Big, LongString } from \"../../types\";\nexport declare class CreateCollectionFact extends ContractFact {\n    readonly name: LongString;\n    readonly royalty: Big;\n    readonly uri: LongString;\n    readonly whitelist: Address[];\n    constructor(token: string, sender: string | Address, contract: string | Address, name: string | LongString, royalty: string | number | Big, uri: string | LongString, whitelist: (string | Address)[] | null, currency: string | CurrencyID);\n    toBuffer(): Buffer;\n    toHintedObject(): FactJson;\n    get operationHint(): string;\n}\n"}}
