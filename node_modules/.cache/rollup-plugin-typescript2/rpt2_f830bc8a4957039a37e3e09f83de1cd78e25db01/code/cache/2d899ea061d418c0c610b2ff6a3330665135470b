{"code":"import { __awaiter } from \"tslib\";\nimport { CreateServiceFact } from \"./create-service\";\nimport { AddTemplateFact } from \"./add-template\";\nimport { AssignItem, AssignFact } from \"./assign\";\nimport { RevokeItem, RevokeFact } from \"./revoke\";\nimport { ContractGenerator, Operation } from \"../base\";\nimport { contract, getAPIData } from \"../../api\";\nimport { TimeStamp, URIString } from \"../../types\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class Credential extends ContractGenerator {\n    constructor(networkID, api, delegateIP) {\n        super(networkID, api, delegateIP);\n    }\n    createService(contractAddr, sender, currency) {\n        return new Operation(this.networkID, new CreateServiceFact(TimeStamp.new().UTC(), sender, contractAddr, currency));\n    }\n    addTemplate(contractAddr, sender, data, currency) {\n        const keysToCheck = ['templateID', 'templateName', 'serviceDate', 'expirationDate', 'templateShare', 'multiAudit', 'displayName', 'subjectKey', 'description', 'creator'];\n        keysToCheck.forEach((key) => {\n            const s = data[key];\n            Assert.check(s !== undefined, MitumError.detail(ECODE.INVALID_DATA_STRUCTURE, `${key} is undefined, check the templateData structure`));\n            s === 'templateID' ? new URIString(s, 'templateID') : null;\n        });\n        return new Operation(this.networkID, new AddTemplateFact(TimeStamp.new().UTC(), sender, contractAddr, data.templateID, data.templateName, data.serviceDate, data.expirationDate, data.templateShare, data.multiAudit, data.displayName, data.subjectKey, data.description, data.creator, currency));\n    }\n    issue(contractAddr, sender, data, currency) {\n        const keysToCheck = ['holder', 'templateID', 'id', 'value', 'validFrom', 'validUntil', 'did'];\n        keysToCheck.forEach((key) => {\n            const s = data[key];\n            Assert.check(s !== undefined, MitumError.detail(ECODE.INVALID_DATA_STRUCTURE, `${key} is undefined, check the templateData structure`));\n            s === 'id' ? new URIString(s, 'id') : null;\n        });\n        return new Operation(this.networkID, new AssignFact(TimeStamp.new().UTC(), sender, [\n            new AssignItem(contractAddr, data.holder, data.templateID, data.id, data.value, data.validFrom, data.validUntil, data.did, currency)\n        ]));\n    }\n    revoke(contractAddr, sender, holder, templateID, id, currency) {\n        return new Operation(this.networkID, new RevokeFact(TimeStamp.new().UTC(), sender, [\n            new RevokeItem(contractAddr, holder, templateID, id, currency)\n        ]));\n    }\n    getServiceInfo(contractAddr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield getAPIData(() => contract.credential.getIssuer(this.api, contractAddr, this.delegateIP));\n        });\n    }\n    getCredentialInfo(contractAddr, templateID, credentialID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield getAPIData(() => contract.credential.getCredential(this.api, contractAddr, templateID, credentialID, this.delegateIP));\n        });\n    }\n    getTemplate(contractAddr, templateID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield getAPIData(() => contract.credential.getTemplate(this.api, contractAddr, templateID, this.delegateIP));\n        });\n    }\n    getAllCredentials(contractAddr, templateID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield getAPIData(() => contract.credential.getCredentials(this.api, contractAddr, templateID, this.delegateIP));\n        });\n    }\n    claimCredential(contractAddr, holder) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield getAPIData(() => contract.credential.getCredentialByHolder(this.api, contractAddr, holder, this.delegateIP));\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/credential/create-service.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/credential/add-template.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/credential/assign.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/credential/revoke.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/api/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/credential/index.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAA;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAA;AAChD,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,UAAU,CAAA;AACjD,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,UAAU,CAAA;AAEjD,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,MAAM,SAAS,CAAA;AAItD,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,WAAW,CAAA;AAChD,OAAO,EAA4B,SAAS,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AAC5E,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAyBvD,MAAM,OAAO,UAAW,SAAQ,iBAAiB;IAC7C,YACI,SAAiB,EACjB,GAAiB,EACjB,UAAwB;QAExB,KAAK,CAAC,SAAS,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;IACrC,CAAC;IAED,aAAa,CACT,YAA8B,EAC9B,MAAwB,EACxB,QAA6B;QAE7B,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,SAAS,EACd,IAAI,iBAAiB,CACjB,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EACrB,MAAM,EACN,YAAY,EACZ,QAAQ,CACX,CACJ,CAAA;IACL,CAAC;IAED,WAAW,CACP,YAA8B,EAC9B,MAAwB,EACxB,IAAkB,EAClB,QAA6B;QAE7B,MAAM,WAAW,GAA2B,CAAC,YAAY,EAAE,cAAc,EAAE,aAAa,EAAE,gBAAgB,EAAE,eAAe,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;QAClM,WAAW,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACxB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,SAAS,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,EAAE,GAAG,GAAG,iDAAiD,CAAC,CAAC,CAAA;YACvI,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,SAAS,EACd,IAAI,eAAe,CACf,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EACrB,MAAM,EACN,YAAY,EACZ,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,OAAO,EACZ,QAAQ,CACX,CACJ,CAAA;IACL,CAAC;IAED,KAAK,CACD,YAA8B,EAC9B,MAAwB,EACxB,IAAe,EACf,QAA6B;QAE7B,MAAM,WAAW,GAAwB,CAAC,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;QACnH,WAAW,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACxB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,SAAS,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,EAAE,GAAG,GAAG,iDAAiD,CAAC,CAAC,CAAA;YACvI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/C,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,SAAS,EACd,IAAI,UAAU,CACV,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EACrB,MAAM,EACN;YACI,IAAI,UAAU,CACV,YAAY,EACZ,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,GAAG,EACR,QAAQ,CACX;SACJ,CACJ,CACJ,CAAA;IACL,CAAC;IAED,MAAM,CACF,YAA8B,EAC9B,MAAwB,EACxB,MAAwB,EACxB,UAAkB,EAClB,EAAU,EACV,QAA6B;QAE7B,OAAO,IAAI,SAAS,CAChB,IAAI,CAAC,SAAS,EACd,IAAI,UAAU,CACV,SAAS,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EACrB,MAAM,EACN;YACI,IAAI,UAAU,CACV,YAAY,EACZ,MAAM,EACN,UAAU,EACV,EAAE,EACF,QAAQ,CACX;SACJ,CACJ,CACJ,CAAA;IACL,CAAC;IAEK,cAAc,CAAC,YAA8B;;YAC/C,OAAO,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;QACzG,CAAC;KAAA;IAEK,iBAAiB,CACnB,YAA8B,EAC9B,UAAkB,EAClB,YAAoB;;YAEpB,OAAO,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;QACvI,CAAC;KAAA;IAEK,WAAW,CACb,YAA8B,EAC9B,UAAkB;;YAElB,OAAO,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;QACvH,CAAC;KAAA;IAEK,iBAAiB,CACnB,YAA8B,EAC9B,UAAkB;;YAElB,OAAO,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;QAC1H,CAAC;KAAA;IAEK,eAAe,CACjB,YAA8B,EAC9B,MAAwB;;YAExB,OAAO,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;QAC7H,CAAC;KAAA;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/credential/index.d.ts","writeByteOrderMark":false,"text":"import { CreateServiceFact } from \"./create-service\";\nimport { AddTemplateFact } from \"./add-template\";\nimport { AssignFact } from \"./assign\";\nimport { RevokeFact } from \"./revoke\";\nimport { ContractGenerator, Operation } from \"../base\";\nimport { Address } from \"../../key\";\nimport { CurrencyID } from \"../../common\";\nimport { Big, Bool, IP, ShortDate } from \"../../types\";\ntype templateData = {\n    templateID: string;\n    templateName: string;\n    serviceDate: string | ShortDate;\n    expirationDate: string | ShortDate;\n    templateShare: boolean | Bool;\n    multiAudit: boolean | Bool;\n    displayName: string;\n    subjectKey: string;\n    description: string;\n    creator: string | Address;\n};\ntype issueData = {\n    holder: string | Address;\n    templateID: string;\n    id: string;\n    value: string;\n    validFrom: string | number | Big;\n    validUntil: string | number | Big;\n    did: string;\n};\nexport declare class Credential extends ContractGenerator {\n    constructor(networkID: string, api?: string | IP, delegateIP?: string | IP);\n    createService(contractAddr: string | Address, sender: string | Address, currency: string | CurrencyID): Operation<CreateServiceFact>;\n    addTemplate(contractAddr: string | Address, sender: string | Address, data: templateData, currency: string | CurrencyID): Operation<AddTemplateFact>;\n    issue(contractAddr: string | Address, sender: string | Address, data: issueData, currency: string | CurrencyID): Operation<AssignFact>;\n    revoke(contractAddr: string | Address, sender: string | Address, holder: string | Address, templateID: string, id: string, currency: string | CurrencyID): Operation<RevokeFact>;\n    getServiceInfo(contractAddr: string | Address): Promise<any>;\n    getCredentialInfo(contractAddr: string | Address, templateID: string, credentialID: string): Promise<any>;\n    getTemplate(contractAddr: string | Address, templateID: string): Promise<any>;\n    getAllCredentials(contractAddr: string | Address, templateID: string): Promise<any>;\n    claimCredential(contractAddr: string | Address, holder: string | Address): Promise<any>;\n}\nexport {};\n"}}
