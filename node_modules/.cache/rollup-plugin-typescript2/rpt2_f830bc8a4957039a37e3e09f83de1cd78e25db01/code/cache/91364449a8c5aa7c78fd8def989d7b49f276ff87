{"code":"import { NFTItem } from \"./item\";\nimport { OperationFact } from \"../base\";\nimport { HINT } from \"../../alias\";\nimport { Big } from \"../../types\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class SignItem extends NFTItem {\n    constructor(contract, nft, currency) {\n        super(HINT.NFT.SIGN.ITEM, contract, currency);\n        this.nft = Big.from(nft);\n    }\n    toBuffer() {\n        return Buffer.concat([\n            super.toBuffer(),\n            this.nft.toBuffer(\"fill\"),\n            this.currency.toBuffer(),\n        ]);\n    }\n    toHintedObject() {\n        return Object.assign(Object.assign({}, super.toHintedObject()), { nft: this.nft.v });\n    }\n}\nexport class SignFact extends OperationFact {\n    constructor(token, sender, items) {\n        super(HINT.NFT.SIGN.FACT, token, sender, items);\n        this.items.forEach(it => Assert.check(this.sender.toString() != it.contract.toString(), MitumError.detail(ECODE.INVALID_ITEMS, \"sender is same with contract address\")));\n    }\n    get operationHint() {\n        return HINT.NFT.SIGN.OPERATION;\n    }\n}\n//# sourceMappingURL=sign.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/nft/item.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"sign.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/nft/sign.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAA;AAChC,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAA;AAEvC,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAA;AAGlC,OAAO,EAAE,GAAG,EAAgB,MAAM,aAAa,CAAA;AAC/C,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAEvD,MAAM,OAAO,QAAS,SAAQ,OAAO;IAGjC,YACI,QAA0B,EAC1B,GAA0B,EAC1B,QAA6B;QAE7B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;QAC7C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAC5B,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,MAAM,CAAC;YACjB,KAAK,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;SAC3B,CAAC,CAAA;IACN,CAAC;IAED,cAAc;QACV,uCACO,KAAK,CAAC,cAAc,EAAE,KACzB,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAClB;IACL,CAAC;CACJ;AAED,MAAM,OAAO,QAAS,SAAQ,aAAuB;IACjD,YAAY,KAAa,EAAE,MAAwB,EAAE,KAAiB;QAClE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;QAE/C,IAAI,CAAC,KAAK,CAAC,OAAO,CACd,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CACd,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAChD,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,sCAAsC,CAAC,CACjF,CACJ,CAAA;IACL,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAA;IAClC,CAAC;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/nft/sign.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { NFTItem } from \"./item\";\nimport { OperationFact } from \"../base\";\nimport { Address } from \"../../key\";\nimport { CurrencyID } from \"../../common\";\nimport { Big, HintedObject } from \"../../types\";\nexport declare class SignItem extends NFTItem {\n    readonly nft: Big;\n    constructor(contract: string | Address, nft: string | number | Big, currency: string | CurrencyID);\n    toBuffer(): Buffer;\n    toHintedObject(): HintedObject;\n}\nexport declare class SignFact extends OperationFact<SignItem> {\n    constructor(token: string, sender: string | Address, items: SignItem[]);\n    get operationHint(): string;\n}\n"}}
