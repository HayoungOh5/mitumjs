{"code":"import { getPublicKey } from \"@noble/secp256k1\";\nexport const privateKeyToPublicKey = (privateKey) => {\n    let privateBuf;\n    if (!Buffer.isBuffer(privateKey)) {\n        if (typeof privateKey !== \"string\") {\n            throw new Error(\"Expected Buffer or string as argument\");\n        }\n        privateKey =\n            privateKey.slice(0, 2) === \"0x\" ? privateKey.slice(2) : privateKey;\n        privateBuf = Buffer.from(privateKey, \"hex\");\n    }\n    else {\n        privateBuf = privateKey;\n    }\n    return getPublicKey(privateBuf, false);\n};\nexport const compress = (publicKey) => {\n    const xCoordinate = publicKey.slice(1, 33);\n    const yCoordinate = publicKey.slice(33);\n    const compressedPublicKey = Buffer.concat([\n        Buffer.from([0x02 + (yCoordinate[yCoordinate.length - 1] % 2)]),\n        xCoordinate,\n    ]);\n    return compressedPublicKey.toString(\"hex\");\n};\n//# sourceMappingURL=converter.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/node_modules/@noble/secp256k1/lib/index.d.ts"],"map":"{\"version\":3,\"file\":\"converter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/converter.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAA;AAE/C,MAAM,CAAC,MAAM,qBAAqB,GAAG,CACnC,UAA2B,EACf,EAAE;IACd,IAAI,UAAkB,CAAC;IAEvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;QAChC,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAClC,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;QAED,UAAU;YACR,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;QACrE,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;KAC7C;SAAM;QACL,UAAU,GAAG,UAAU,CAAC;KACzB;IAED,OAAO,YAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACzC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,SAAqB,EAAU,EAAE;IACxD,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAE3C,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAExC,MAAM,mBAAmB,GAAG,MAAM,CAAC,MAAM,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/D,WAAW;KACZ,CAAC,CAAC;IAEH,OAAO,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7C,CAAC,CAAC\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/converter.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nexport declare const privateKeyToPublicKey: (privateKey: string | Buffer) => Uint8Array;\nexport declare const compress: (publicKey: Uint8Array) => string;\n"}}
