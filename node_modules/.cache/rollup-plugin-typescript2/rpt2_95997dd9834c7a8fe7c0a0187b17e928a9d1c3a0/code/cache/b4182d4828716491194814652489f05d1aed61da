{"code":"import { ContractFact } from \"../base\";\nimport { Big } from \"../../types\";\nimport { HINT } from \"../../alias\";\nimport { Config } from \"../../node\";\nimport { CurrencyID } from \"../../common\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class CreateDAOFact extends ContractFact {\n    constructor(token, sender, contract, option, votingPowerToken, threshold, fee, whitelist, proposalReviewPeriod, registrationPeriod, preSnapshotPeriod, votingPeriod, postSnapshotPeriod, executionDelayPeriod, turnout, quorum, currency) {\n        super(HINT.DAO.CREATE_DAO.FACT, token, sender, contract, currency);\n        this.option = option;\n        this.votingPowerToken = CurrencyID.from(votingPowerToken);\n        this.threshold = Big.from(threshold);\n        this.fee = fee;\n        this.whitelist = whitelist;\n        this.proposalReviewPeriod = Big.from(proposalReviewPeriod);\n        this.registrationPeriod = Big.from(registrationPeriod);\n        this.preSnapshotPeriod = Big.from(preSnapshotPeriod);\n        this.votingPeriod = Big.from(votingPeriod);\n        this.postSnapshotPeriod = Big.from(postSnapshotPeriod);\n        this.executionDelayPeriod = Big.from(executionDelayPeriod);\n        this.turnout = Big.from(turnout);\n        this.quorum = Big.from(quorum);\n        Assert.check(Config.DAO.QUORUM.satisfy(this.turnout.v), MitumError.detail(ECODE.INVALID_FACT, \"turnout out of range\"));\n        Assert.check(Config.DAO.QUORUM.satisfy(this.quorum.v), MitumError.detail(ECODE.INVALID_FACT, \"quorum out of range\"));\n        this.whitelist.accounts.forEach(a => Assert.check(this.contract.toString() !== a.toString(), MitumError.detail(ECODE.INVALID_FACT, \"contract is same with whitelist address\")));\n        this._hash = this.hashing();\n    }\n    toBuffer() {\n        return Buffer.concat([\n            super.toBuffer(),\n            Buffer.from(this.option),\n            this.votingPowerToken.toBuffer(),\n            this.threshold.toBuffer(),\n            this.fee.toBuffer(),\n            this.whitelist.toBuffer(),\n            this.proposalReviewPeriod.toBuffer(\"fill\"),\n            this.registrationPeriod.toBuffer(\"fill\"),\n            this.preSnapshotPeriod.toBuffer(\"fill\"),\n            this.votingPeriod.toBuffer(\"fill\"),\n            this.postSnapshotPeriod.toBuffer(\"fill\"),\n            this.executionDelayPeriod.toBuffer(\"fill\"),\n            this.turnout.toBuffer(),\n            this.quorum.toBuffer(),\n            this.currency.toBuffer(),\n        ]);\n    }\n    toHintedObject() {\n        return {\n            ...super.toHintedObject(),\n            option: this.option,\n            voting_power_token: this.votingPowerToken.toString(),\n            threshold: this.threshold.toString(),\n            fee: this.fee.toHintedObject(),\n            whitelist: this.whitelist.toHintedObject(),\n            proposal_review_period: this.proposalReviewPeriod.v,\n            registration_period: this.registrationPeriod.v,\n            pre_snapshot_period: this.preSnapshotPeriod.v,\n            voting_period: this.votingPeriod.v,\n            post_snapshot_period: this.postSnapshotPeriod.v,\n            execution_delay_period: this.executionDelayPeriod.v,\n            turnout: this.turnout.v,\n            quorum: this.quorum.v,\n        };\n    }\n    get operationHint() {\n        return HINT.DAO.CREATE_DAO.OPERATION;\n    }\n}\n//# sourceMappingURL=create-dao.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/dao/whitelist.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/node/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"create-dao.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/dao/create-dao.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/dao/create-dao.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { Whitelist } from \"./whitelist\";\nimport { ContractFact, FactJson } from \"../base\";\nimport { Big } from \"../../types\";\nimport { Address } from \"../../key\";\nimport { Amount } from \"../../common\";\nimport { CurrencyID } from \"../../common\";\nexport declare class CreateDAOFact extends ContractFact {\n    readonly option: \"crypto\" | \"biz\";\n    readonly votingPowerToken: CurrencyID;\n    readonly threshold: Big;\n    readonly fee: Amount;\n    readonly whitelist: Whitelist;\n    readonly proposalReviewPeriod: Big;\n    readonly registrationPeriod: Big;\n    readonly preSnapshotPeriod: Big;\n    readonly votingPeriod: Big;\n    readonly postSnapshotPeriod: Big;\n    readonly executionDelayPeriod: Big;\n    readonly turnout: Big;\n    readonly quorum: Big;\n    constructor(token: string, sender: string | Address, contract: string | Address, option: \"crypto\" | \"biz\", votingPowerToken: string | CurrencyID, threshold: string | number | Big, fee: Amount, whitelist: Whitelist, proposalReviewPeriod: string | number | Big, registrationPeriod: string | number | Big, preSnapshotPeriod: string | number | Big, votingPeriod: string | number | Big, postSnapshotPeriod: string | number | Big, executionDelayPeriod: string | number | Big, turnout: string | number | Big, quorum: string | number | Big, currency: string | CurrencyID);\n    toBuffer(): Buffer;\n    toHintedObject(): FactJson;\n    get operationHint(): string;\n}\n"}}
