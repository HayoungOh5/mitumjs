{"code":"import { Item, NodeFact } from \"../base\";\nimport { HINT } from \"../../alias\";\nimport { Config } from \"../../node\";\nimport { Address } from \"../../key\";\nimport { SortFunc } from \"../../utils\";\nimport { Assert, ECODE, MitumError } from \"../../error\";\nexport class MintItem extends Item {\n    constructor(receiver, amount) {\n        super(HINT.CURRENCY.MINT.ITEM);\n        this.amount = amount;\n        this.receiver = Address.from(receiver);\n    }\n    toBuffer() {\n        return Buffer.concat([\n            this.receiver.toBuffer(),\n            this.amount.toBuffer(),\n        ]);\n    }\n    toHintedObject() {\n        return Object.assign(Object.assign({}, super.toHintedObject()), { receiver: this.receiver.toString(), amount: this.amount.toHintedObject() });\n    }\n    toString() {\n        return `${this.receiver.toString()}-${this.amount.currency.toString()}`;\n    }\n}\nexport class MintFact extends NodeFact {\n    constructor(token, items) {\n        super(HINT.CURRENCY.MINT.FACT, token);\n        Assert.check(Config.ITEMS_IN_FACT.satisfy(items.length), MitumError.detail(ECODE.INVALID_ITEMS, \"items length out of range\"));\n        Assert.check(new Set(items.map(it => it.toString())).size === items.length, MitumError.detail(ECODE.INVALID_ITEMS, \"duplicate receiver-currency found in items\"));\n        this.items = items;\n        this._hash = this.hashing();\n    }\n    toBuffer() {\n        return Buffer.concat([\n            super.toBuffer(),\n            Buffer.concat(this.items.sort(SortFunc).map(it => it.toBuffer())),\n        ]);\n    }\n    toHintedObject() {\n        return Object.assign(Object.assign({}, super.toHintedObject()), { items: this.items.sort(SortFunc).map(it => it.toHintedObject()) });\n    }\n    get operationHint() {\n        return HINT.CURRENCY.MINT.OPERATION;\n    }\n}\n//# sourceMappingURL=mint.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/alias/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/node/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/common/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/utils/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"mint.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/operation/currency/mint.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAY,MAAM,SAAS,CAAA;AAElD,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAA;AAClC,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AACnC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AAEnC,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AAEtC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,aAAa,CAAA;AAEvD,MAAM,OAAO,QAAS,SAAQ,IAAI;IAI9B,YAAY,QAA0B,EAAE,MAAc;QAClD,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IAC1C,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,MAAM,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;SACzB,CAAC,CAAA;IACN,CAAC;IAED,cAAc;QACV,uCACO,KAAK,CAAC,cAAc,EAAE,KACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAClC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,IACvC;IACL,CAAC;IAED,QAAQ;QACJ,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAA;IAC3E,CAAC;CACJ;AAED,MAAM,OAAO,QAAS,SAAQ,QAAQ;IAGlC,YAAY,KAAa,EAAE,KAAiB;QACxC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;QAErC,MAAM,CAAC,KAAK,CACR,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAC1C,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,2BAA2B,CAAC,CACtE,CAAA;QAED,MAAM,CAAC,KAAK,CACR,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,MAAM,EAC7D,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,4CAA4C,CAAC,CACvF,CAAA;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;IAC/B,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,MAAM,CAAC;YACjB,KAAK,CAAC,QAAQ,EAAE;YAChB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE,CAAC,CAAA;IACN,CAAC;IAED,cAAc;QACV,uCACO,KAAK,CAAC,cAAc,EAAE,KACzB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,IAClE;IACL,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAA;IACvC,CAAC;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/currency/mint.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { Item, NodeFact, FactJson } from \"../base\";\nimport { Address } from \"../../key\";\nimport { Amount } from \"../../common\";\nimport { HintedObject } from \"../../types\";\nexport declare class MintItem extends Item {\n    readonly amount: Amount;\n    readonly receiver: Address;\n    constructor(receiver: string | Address, amount: Amount);\n    toBuffer(): Buffer;\n    toHintedObject(): HintedObject;\n    toString(): string;\n}\nexport declare class MintFact extends NodeFact {\n    readonly items: MintItem[];\n    constructor(token: string, items: MintItem[]);\n    toBuffer(): Buffer;\n    toHintedObject(): FactJson;\n    get operationHint(): string;\n}\n"}}
