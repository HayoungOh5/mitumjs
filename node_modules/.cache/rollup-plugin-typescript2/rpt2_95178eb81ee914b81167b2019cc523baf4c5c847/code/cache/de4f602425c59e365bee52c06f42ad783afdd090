{"code":"import { Assert, ECODE, MitumError } from \"../error\";\nexport class LongString {\n    constructor(s) {\n        Assert.check(s !== \"\", MitumError.detail(ECODE.EMPTY_STRING, \"empty string\"));\n        this.s = s;\n    }\n    static from(s) {\n        return s instanceof LongString ? s : new LongString(s);\n    }\n    toBuffer() {\n        return Buffer.from(this.s);\n    }\n    toString() {\n        return this.s;\n    }\n}\nexport class ShortDate extends LongString {\n    constructor(s) {\n        super(s);\n        Assert.check(/^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$/.test(s), MitumError.detail(ECODE.INVALID_DATE, \"invalid simple string date\"));\n    }\n    static from(s) {\n        return s instanceof ShortDate ? s : new ShortDate(s);\n    }\n}\nexport class IP extends LongString {\n    constructor(s) {\n        super(s);\n        Assert.check(/^(http|https):\\/\\/(\\d{1,3}\\.){3}\\d{1,3}(?::\\d+)?$/.test(s)\n            || /^(http|https):\\/\\/(?:[\\w-]+\\.)+[\\w-]+(?::\\d+)?(?:\\/[\\w-./?%&=]*)?$/.test(s), MitumError.detail(ECODE.INVALID_IP, \"invalid ip address, ip\"));\n    }\n    static from(s) {\n        return s instanceof IP ? s : new IP(s);\n    }\n}\nexport class URIString {\n    constructor(s, name) {\n        Assert.check(/^[A-Za-z0-9$\\-_.!*'()]+$/.test(s), MitumError.detail(ECODE.INVALID_CHARACTER, `${name} must not contain: space / : ? # [ ] @`));\n    }\n}\n//# sourceMappingURL=string.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/error/index.ts"],"map":"{\"version\":3,\"file\":\"string.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/string.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,UAAU,CAAA;AAEpD,MAAM,OAAO,UAAU;IAGnB,YAAY,CAAS;QACjB,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,CAAA;QAC7E,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;IACd,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,CAAsB;QAC9B,OAAO,CAAC,YAAY,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IAC1D,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAC9B,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,CAAC,CAAA;IACjB,CAAC;CACJ;AAED,MAAM,OAAO,SAAU,SAAQ,UAAU;IACrC,YAAY,CAAS;QACjB,KAAK,CAAC,CAAC,CAAC,CAAA;QACR,MAAM,CAAC,KAAK,CACR,oDAAoD,CAAC,IAAI,CAAC,CAAC,CAAC,EAC5D,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,4BAA4B,CAAC,CACtE,CAAA;IACL,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,CAAqB;QAC7B,OAAO,CAAC,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAA;IACxD,CAAC;CACJ;AAED,MAAM,OAAO,EAAG,SAAQ,UAAU;IAC9B,YAAY,CAAS;QACjB,KAAK,CAAC,CAAC,CAAC,CAAA;QACR,MAAM,CAAC,KAAK,CACR,mDAAmD,CAAC,IAAI,CAAC,CAAC,CAAC;eACxD,oEAAoE,CAAC,IAAI,CAAC,CAAC,CAAC,EAC/E,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,wBAAwB,CAAC,CAChE,CAAA;IACL,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,CAAc;QACtB,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;IAC1C,CAAC;CACJ;AAED,MAAM,OAAO,SAAS;IAClB,YAAY,CAAS,EAAE,IAAY;QAC/B,MAAM,CAAC,KAAK,CACR,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC,EAClC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,EAAE,GAAG,IAAI,wCAAwC,CAAC,CAC9F,CAAA;IACL,CAAC;CACJ\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/types/string.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\nimport { IBuffer, IString } from \"../types\";\nexport declare class LongString implements IBuffer, IString {\n    private s;\n    constructor(s: string);\n    static from(s: string | LongString): LongString;\n    toBuffer(): Buffer;\n    toString(): string;\n}\nexport declare class ShortDate extends LongString {\n    constructor(s: string);\n    static from(s: string | ShortDate): ShortDate;\n}\nexport declare class IP extends LongString {\n    constructor(s: string);\n    static from(s: string | IP): IP;\n}\nexport declare class URIString {\n    constructor(s: string, name: string);\n}\n"}}
