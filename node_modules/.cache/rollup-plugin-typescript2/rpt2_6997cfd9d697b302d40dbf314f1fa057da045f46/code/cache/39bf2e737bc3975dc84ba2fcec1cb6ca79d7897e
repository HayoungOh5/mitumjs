{"code":"import { __awaiter } from \"tslib\";\nimport { Currency, Account, Contract } from \"./currency\";\nimport { NFT } from \"./nft\";\nimport { Credential } from \"./credential\";\nimport { DAO } from \"./dao\";\nimport { STO } from \"./sto\";\nimport { KYC } from \"./kyc\";\nimport { TimeStamp } from \"./timestamp\";\nimport { Token } from \"./token\";\nimport { Point } from \"./point\";\nimport { Signer } from \"./signer\";\nimport { operation as api } from \"../api\";\nimport { KeyPair } from \"../key\";\nimport { Generator } from \"../types\";\nimport * as Base from \"./base\";\nexport class Operation extends Generator {\n    constructor(networkID, api, delegateIP) {\n        super(networkID, api, delegateIP);\n    }\n    getAllOperations() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield api.getOperations(this.api, this.delegateIP);\n        });\n    }\n    getOperation(hash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield api.getOperation(this.api, hash, this.delegateIP);\n        });\n    }\n    sign(privatekey, operation, option) {\n        const op = operation;\n        op.sign(privatekey instanceof KeyPair ? privatekey.privateKey : privatekey, option);\n        return op;\n    }\n    send(operation, headers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield api.send(this.api, operation, this.delegateIP, headers);\n        });\n    }\n}\nexport { Currency, Account, Contract, NFT, Credential, DAO, STO, KYC, TimeStamp, Token, Point, Signer, Base, };\n//# sourceMappingURL=index.js.map","references":["/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/currency/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/nft/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/credential/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/dao/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/sto/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/kyc/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/timestamp/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/token/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/point/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/signer.ts","/Users/ohayoung/Projects/npm/mitumjs/src/api/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/key/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/types/index.ts","/Users/ohayoung/Projects/npm/mitumjs/src/operation/base/index.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/operation/index.ts\"],\"names\":[],\"mappings\":\";AAEA,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAA;AACxD,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAA;AAC3B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAA;AAC3B,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAA;AAC3B,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAA;AAC3B,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAA;AAC/B,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAA;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAA;AAEjC,OAAO,EAAE,SAAS,IAAI,GAAG,EAAE,MAAM,QAAQ,CAAA;AACzC,OAAO,EAAO,OAAO,EAAE,MAAM,QAAQ,CAAA;AACrC,OAAO,EAAE,SAAS,EAAoB,MAAM,UAAU,CAAA;AAEtD,OAAO,KAAK,IAAI,MAAM,QAAQ,CAAA;AAE9B,MAAM,OAAO,SAAU,SAAQ,SAAS;IACvC,YACC,SAAiB,EACjB,GAAiB,EACjB,UAAwB;QAExB,KAAK,CAAC,SAAS,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;IAClC,CAAC;IAEK,gBAAgB;;YACrB,OAAO,MAAM,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;QAC1D,CAAC;KAAA;IAEK,YAAY,CAAC,IAAY;;YAC9B,OAAO,MAAM,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;QAC/D,CAAC;KAAA;IAED,IAAI,CACH,UAAkC,EAClC,SAAmB,EACnB,MAAmB;QAEnB,MAAM,EAAE,GAAG,SAAS,CAAA;QACpB,EAAE,CAAC,IAAI,CAAC,UAAU,YAAY,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAA;QACnF,OAAO,EAAE,CAAA;IACV,CAAC;IAEK,IAAI,CACT,SAAgC,EAChC,OAA8B;;YAE9B,OAAO,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAA;QACrE,CAAC;KAAA;CACD;AAED,OAAO,EACN,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAC3B,GAAG,EACH,UAAU,EACV,GAAG,EACH,GAAG,EACH,GAAG,EACH,SAAS,EACT,KAAK,EACL,KAAK,EACL,MAAM,EACN,IAAI,GACJ,CAAA\"}","dts":{"name":"/Users/ohayoung/Projects/npm/mitumjs/node_modules/.cache/rollup-plugin-typescript2/placeholder/operation/index.d.ts","writeByteOrderMark":false,"text":"import { SignOption, Operation as OP, Fact } from \"./base\";\nimport { Currency, Account, Contract } from \"./currency\";\nimport { NFT } from \"./nft\";\nimport { Credential } from \"./credential\";\nimport { DAO } from \"./dao\";\nimport { STO } from \"./sto\";\nimport { KYC } from \"./kyc\";\nimport { TimeStamp } from \"./timestamp\";\nimport { Token } from \"./token\";\nimport { Point } from \"./point\";\nimport { Signer } from \"./signer\";\nimport { Key, KeyPair } from \"../key\";\nimport { Generator, HintedObject, IP } from \"../types\";\nimport * as Base from \"./base\";\nexport declare class Operation extends Generator {\n    constructor(networkID: string, api?: string | IP, delegateIP?: string | IP);\n    getAllOperations(): Promise<import(\"axios\").AxiosResponse<any, any>>;\n    getOperation(hash: string): Promise<import(\"axios\").AxiosResponse<any, any>>;\n    sign(privatekey: string | Key | KeyPair, operation: OP<Fact>, option?: SignOption): OP<Fact>;\n    send(operation: string | HintedObject, headers?: {\n        [i: string]: any;\n    }): Promise<import(\"axios\").AxiosResponse<any, any>>;\n}\nexport { Currency, Account, Contract, NFT, Credential, DAO, STO, KYC, TimeStamp, Token, Point, Signer, Base, };\n"}}
